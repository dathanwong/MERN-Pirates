{"version":3,"sources":["Views/Home.js","Views/Create.js","Views/Pirate.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","pirates","setPirates","className","to","map","pirate","key","_id","src","image","alt","style","name","onClick","id","Axios","delete","then","filter","catch","err","console","log","Create","useState","setName","setImage","numChests","setNumChests","catchPhrase","setCatchPhrase","position","setPosition","hasPegLeg","setHasPegLeg","hasEyePatch","setHasEyePatch","hasHookHand","setHasHookHand","buttonEnabled","setButtonEnabled","errors","setErrors","useEffect","length","onSubmit","e","preventDefault","newPirate","post","res","data","navigate","response","required","type","value","onChange","target","properties","message","onSelect","disabled","Pirate","setPirate","updateParameter","param","put","get","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a0a2df63.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from '@reach/router';\r\nimport Axios from 'axios';\r\n\r\nconst Home = (props) => {\r\n\r\n    const {pirates, setPirates} = props;\r\n\r\n    function deletePirate(id){\r\n        Axios.delete('http://localhost:8000/api/pirates/'+id)\r\n            .then(()=>{\r\n                setPirates(pirates.filter((pirate)=>pirate._id !== id));\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return ( \r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-between\">\r\n                <div className=\"col-3\"></div>\r\n                <div className=\"col-6\">\r\n                    <h1>Pirate Crew</h1>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <Link to=\"/pirates/new\" className=\"btn btn-primary\">Add Pirate</Link>\r\n                </div>\r\n            </div>\r\n            {\r\n                pirates.map(pirate =>\r\n                    <div key={pirate._id} className=\"row my-5\">\r\n                        <div className=\"col\">\r\n                            <div className=\"container border border-dark\">\r\n                                <div className=\"row m-2\">\r\n                                    <div className=\"col-3\">\r\n                                        <img src={pirate.image} alt=\"\" style={{\"width\": \"150px\", \"height\": \"150px\"}}/>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <div className=\"row justify-content-center\">\r\n                                            <h2>{pirate.name}</h2>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6 text-right\">\r\n                                                <Link to={\"/pirates/\"+pirate._id} className=\"btn btn-primary\">View Pirate</Link>\r\n                                            </div>\r\n                                            <div className=\"col-6 text-left\">\r\n                                                <button onClick={() => deletePirate(pirate._id)} className=\"btn btn-danger\">Walk the Plank</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport { Link, navigate } from '@reach/router';\r\nimport Axios from 'axios';\r\n\r\nconst Create = (props) => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [numChests, setNumChests] = useState(0);\r\n    const [catchPhrase, setCatchPhrase] = useState(\"\");\r\n    const [position, setPosition] = useState(\"Captain\");\r\n    const [hasPegLeg, setHasPegLeg] = useState(true);\r\n    const [hasEyePatch, setHasEyePatch] = useState(true);\r\n    const [hasHookHand, setHasHookHand] = useState(true);\r\n    const [buttonEnabled, setButtonEnabled] = useState(false);\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        if(name.length > 0 && image.length>0 && numChests>=0 && catchPhrase.length > 0 && position.length>0) setButtonEnabled(true);\r\n        else setButtonEnabled(false);\r\n    }, [name, image, numChests, catchPhrase, position])\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        const newPirate = {\r\n            name,\r\n            image,\r\n            numChests,\r\n            catchPhrase,\r\n            position,\r\n            hasPegLeg,\r\n            hasEyePatch,\r\n            hasHookHand\r\n        }\r\n\r\n        Axios.post('http://localhost:8000/api/pirates', newPirate)\r\n            .then(res =>{\r\n                console.log(res.data);\r\n                navigate('/pirates/'+res.data._id);\r\n            })\r\n            .catch(err =>{\r\n                console.log(err.response.data.errors);\r\n                setErrors(err.response.data.errors);\r\n            })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-between\">\r\n            <div className=\"col-3\"></div>\r\n            <div className=\"col-6\">\r\n                <h1>Add Pirate</h1>\r\n            </div>\r\n            <div className=\"col-3\">\r\n                <Link to=\"/pirates\" className=\"btn btn-primary\">Crew Board</Link>\r\n            </div>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                <div className=\"row my-2\">\r\n                    Pirate Name:\r\n                </div>\r\n                <div className=\"row my-2\">\r\n                    <input required type=\"text\" value={name} onChange={e => setName(e.target.value)} />\r\n                    {errors && (\r\n                                <span className=\"text-danger\">\r\n                                {errors?.name?.properties?.message}\r\n                                </span>\r\n                            )}\r\n                </div>\r\n                <div className=\"row my-2\">\r\n                    Image Url:\r\n                </div>\r\n                <div className=\"row my-2\">\r\n                    <input required type=\"text\" value={image} onChange={e => setImage(e.target.value)} />\r\n                    {errors && (\r\n                                <span className=\"text-danger\">\r\n                                {errors?.image?.properties?.message}\r\n                                </span>\r\n                            )}\r\n                </div>\r\n                <div className=\"row my-2\">\r\n                    # of Treasure Chests:\r\n                </div>\r\n                <div className=\"row my-2\">\r\n                    <input required type=\"number\" value={numChests} onChange={e => setNumChests(e.target.value)} />\r\n                    {errors && (\r\n                                <span className=\"text-danger\">\r\n                                {errors?.numChests?.properties?.message}\r\n                                </span>\r\n                            )}\r\n                </div>\r\n                <div className=\"row my-2\">\r\n                    Pirate Catch Phrase:\r\n                </div>\r\n                <div className=\"row my-2\">\r\n                    <input required type=\"text\" value={catchPhrase} onChange={e => setCatchPhrase(e.target.value)} />\r\n                    {errors && (\r\n                                <span className=\"text-danger\">\r\n                                {errors?.catchPhrase?.properties?.message}\r\n                                </span>\r\n                            )}\r\n                </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                <div className=\"row\">\r\n                    Crew Position:\r\n                </div>\r\n                <div className=\"row my-2\">\r\n                    <select required value={position} onChange={e => setPosition(e.target.value)}>\r\n                        <option value=\"Captain\">Captain</option>\r\n                        <option value=\"First Mate\">First Mate</option>\r\n                        <option value=\"Quarter Master\">Quarter Master</option>\r\n                        <option value=\"Boatswain\">Boatswain</option>\r\n                        <option value=\"Powder Monkey\">Powder Monkey</option>\r\n                    </select>\r\n                    {errors && (\r\n                                <span className=\"text-danger\">\r\n                                {errors?.position?.properties?.message}\r\n                                </span>\r\n                            )}\r\n                </div>\r\n                <div className=\"row my-2\">\r\n                    <input type=\"checkbox\" name=\"hasPegLeg\" id=\"\" value={hasPegLeg} onSelect={e => setHasPegLeg(e.target.value)} />\r\n                    <label>Peg Leg</label>\r\n                    {errors && (\r\n                                <span className=\"text-danger\">\r\n                                {errors?.hasPegLeg?.properties?.message}\r\n                                </span>\r\n                            )}\r\n                </div>\r\n                <div className=\"row my-2\">\r\n                    <input type=\"checkbox\" name=\"hasEyePatch\" id=\"\" value={hasEyePatch} onSelect={e => setHasEyePatch(e.target.value)} />\r\n                    <label>Eye Patch</label>\r\n                    {errors && (\r\n                                <span className=\"text-danger\">\r\n                                {errors?.hasEyePatch?.properties?.message}\r\n                                </span>\r\n                            )}\r\n                </div>\r\n                <div className=\"row my-2\">\r\n                    <input type=\"checkbox\" name=\"hasHookHand\" id=\"\" value={hasHookHand} onSelect={e => setHasHookHand(e.target.value)} />\r\n                    <label>Hook Hand</label>\r\n                    {errors && (\r\n                                <span className=\"text-danger\">\r\n                                {errors?.hasHookHand?.properties?.message}\r\n                                </span>\r\n                            )}\r\n                </div>\r\n                <div className=\"row my-2\">\r\n                    {\r\n                        buttonEnabled ? \r\n                        <button className=\"btn btn-primary\" type=\"submit\">Add Pirate</button>\r\n                        :\r\n                        <button disabled className=\"btn btn-primary\" type=\"submit\">Add Pirate</button>\r\n                    }\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Create;","import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\n\r\nconst Pirate = (props) => {\r\n\r\n    const [pirate, setPirate] = useState(null);\r\n    const [hasPegLeg, setHasPegLeg] = useState(false);\r\n    const [hasEyePatch, setHasEyePatch] = useState(false);\r\n    const [hasHookHand, setHasHookHand] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        Axios.get('http://localhost:8000/api/pirates/' + props.id)\r\n            .then(res => {\r\n                setPirate(res.data);\r\n                setHasPegLeg(res.data.hasPegLeg);\r\n                setHasEyePatch(res.data.hasEyePatch);\r\n                setHasHookHand(res.data.hasHookHand);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }, [props.id])\r\n\r\n    function updateParameter(param){\r\n        pirate[param] = !pirate[param];\r\n        console.log(pirate);\r\n        Axios.put('http://localhost:8000/api/pirates/'+props.id, pirate)\r\n            .then(res => {\r\n                setPirate(pirate);\r\n                setHasPegLeg(pirate.hasPegLeg);\r\n                setHasEyePatch(pirate.hasEyePatch);\r\n                setHasHookHand(pirate.hasHookHand);\r\n            })\r\n            .catch(err =>{\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    if(pirate === null) return <div>Loading...</div>;\r\n\r\n    return ( \r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 text-center\">\r\n                    <h1>{pirate.name}</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <div className=\"row\">\r\n                        <img src={pirate.image} alt=\"\" style={{\"height\":\"300px\"}}/>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <h2>\"{pirate.catchPhrase}\"</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"container border border-dark\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <h2>About</h2>\r\n                        </div>\r\n                        <div className=\"row my-2\">\r\n                            <div className=\"col-4\">\r\n                                Position:\r\n                            </div>\r\n                            <div className=\"col-8\">\r\n                                {pirate.position}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row my-2\">\r\n                            <div className=\"col-4\">\r\n                                Treasures:\r\n                            </div>\r\n                            <div className=\"col-8\">\r\n                                {pirate.numChests}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row my-2\">\r\n                            <div className=\"col-4\">\r\n                                Peg Leg:\r\n                            </div>\r\n                            <div className=\"col-8\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        {hasPegLeg ? \"Yes\" : \"No\"}\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        {hasPegLeg ? <button onClick={e => updateParameter(\"hasPegLeg\")} className=\"btn btn-danger\">No</button> : <button onClick={e => updateParameter(\"hasPegLeg\")} className=\"btn btn-success\">Yes</button>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row my-2\">\r\n                            <div className=\"col-4\">\r\n                                Eye Patch:\r\n                            </div>\r\n                            <div className=\"col-8\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        {hasEyePatch ? \"Yes\" : \"No\"}\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        {hasEyePatch ? <button onClick={e => updateParameter(\"hasEyePatch\")} className=\"btn btn-danger\">No</button> : <button onClick={e => updateParameter(\"hasEyePatch\")} className=\"btn btn-success\">Yes</button>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row my-2\">\r\n                            <div className=\"col-4\">\r\n                                Hook Hand:\r\n                            </div>\r\n                            <div className=\"col-8\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        {hasHookHand ? \"Yes\" : \"No\"}\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        {hasHookHand ? <button onClick={e => updateParameter(\"hasHookHand\")} className=\"btn btn-danger\">No</button> : <button onClick={e => updateParameter(\"hasHookHand\")} className=\"btn btn-success\">Yes</button>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Pirate;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Home from './Views/Home';\nimport {Router} from '@reach/router';\nimport Create from './Views/Create';\nimport Axios from 'axios';\nimport Pirate from './Views/Pirate';\n\n\nfunction App() {\n\n  const [pirates, setPirates] = useState([]);\n\n    useEffect(() =>{\n        Axios.get('http://localhost:8000/api/pirates')\n            .then(pirates =>{\n                setPirates(pirates.data);\n            })\n            .catch(err =>{\n                console.log(err);\n            })\n    }, [])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Home path=\"/pirates\" pirates={pirates} setPirates={setPirates}/>\n        <Create path=\"/pirates/new\" pirates={pirates} setPirates={setPirates}/>\n        <Pirate path=\"pirates/:id\"/>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}